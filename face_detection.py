# -*- coding: utf-8 -*-
"""Face_Detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jMK97twwOWdL1H4kzRdFobkcBG9MsXZc

* 이미지를 다른 다양한 해상도와 크기로 조절(=image pyramid)  
* first model :  
proposal network or P-Net(얕은 CNN)으로 빠르게 얼굴 부분 후보 검출(face detection), 눈, 코, 입 좌표(face alignment)  
=>face classification(얼굴인지 아닌지 분류), bounding box regression(왼쪽 상단 꼭지점의 좌표와 박스의 너비, 높이), landmark localization(눈, 코 입꼬리의 좌표)
* second model :  
refine network or R-Net(복잡한 CNN)으로 얼굴이 아닌 부분의 box삭제
* third model :  
output network or O-Net(강한 CNN)으로 얼굴 부분 결과 제안
<br></br>
=> 각 모델들 사이에 NMS, Bounding box regression 수행
* NMS(non-maximum suppression) : 한 object에 여러개의 box가 bounding되는 부분(class별 확률)을 제거하는 방법
"""

# pip install mtcnn #전처리모델 사용

from matplotlib import pyplot
from mtcnn.mtcnn import MTCNN
from os import listdir
from os.path import isfile, join


path = './dataset/fake_img'
files = [f for f in listdir(path) if isfile(join(path, f))]

"""
얼굴 추출
* x1 = 박스의 왼쪽하단 모서리의 x좌표
* y1 = 박스의 왼쪽하단 모서리의 y좌표
* width = 박스의 가로 길이
* height = 박스의 세로 길이
"""
def draw_faces(filename, result_list):
  data = pyplot.imread(filename)

  for i in range(len(result_list)):
    x1, y1, width, height = result_list[i]['box']
    x2, y2 = x1+width, y1+height                  #오른쪽 하단 모서리 좌표
    pyplot.imsave("C:/Users/mmclab1/Desktop/fakecheck/dataset/fake_img/%s" % (filename.split('\\')[1]),
                  data[max(y1 - 20, 0):y2 + 20, max(x1 - 40, 0):x2 + 40])


for n in range(0, len(files)):
  fn = join(path, files[n])
  pixels = pyplot.imread(fn)

  detector = MTCNN()
  faces = detector.detect_faces(pixels)

  draw_faces(fn, faces)


print('succes face detection')

